Executing: codex exec --dangerously-bypass-approvals-and-sandbox Create a deploy-ready React (Vite + TS) web app in consultant-portal/ with: 1) Pages: / (Home), /upload (drag & drop), /analysis (deadline/compliance results), /opportunities (demo funding results), /pricing (€299/month), /contact (demo request form). 2) Components: Dropzone, ResultsCard, PricingTable, Navbar, Footer. 3) State: simple Zustand or Context. 4) Styling: Tailwind CSS. 5) Include README with deploy steps for Vercel/Netlify. 6) Provide placeholder Stripe checkout button and .env examples. 7) Add basic routing (react-router).

Project Context: EUFM (European Union Funds Manager) - AI Agent Orchestration System
Working Directory: /Users/panda/Desktop/EUFM
Project Type: TypeScript/Node.js multi-agent coordination system

Safety Guidelines:
- Preserve existing functionality when modifying files
- Follow TypeScript best practices and existing code patterns
- Add proper error handling and logging
- Test changes before completing
Working Directory: /Users/panda/Desktop/EUFM
Timeout: 600000 ms

[2025-09-08T17:17:38] OpenAI Codex v0.30.0 (research preview)
--------
workdir: /Users/panda/Desktop/EUFM
model: gpt-5
provider: openai
approval: never
sandbox: danger-full-access
reasoning effort: medium
reasoning summaries: auto
--------
[2025-09-08T17:17:38] User instructions:
Create a deploy-ready React (Vite + TS) web app in consultant-portal/ with: 1) Pages: / (Home), /upload (drag & drop), /analysis (deadline/compliance results), /opportunities (demo funding results), /pricing (€299/month), /contact (demo request form). 2) Components: Dropzone, ResultsCard, PricingTable, Navbar, Footer. 3) State: simple Zustand or Context. 4) Styling: Tailwind CSS. 5) Include README with deploy steps for Vercel/Netlify. 6) Provide placeholder Stripe checkout button and .env examples. 7) Add basic routing (react-router).

Project Context: EUFM (European Union Funds Manager) - AI Agent Orchestration System
Working Directory: /Users/panda/Desktop/EUFM
Project Type: TypeScript/Node.js multi-agent coordination system

Safety Guidelines:
- Preserve existing functionality when modifying files
- Follow TypeScript best practices and existing code patterns
- Add proper error handling and logging
- Test changes before completing

[2025-09-08T17:17:45] thinking

**Creating React app setup**

I need to create a new React consultant- app underportal/ using Vite, TypeScript, Tailwind CSS, and react-router. I should consider using Zustand or Context for state management. The app will need pages, components, state management, styling, and a with README deployment steps for Vercel or Netlify. I’ll also add a placeholder Stripe checkout button and .env examples. It's crucial to include TypeScript, error handling, and logging while adhering to the AGENTS.md specification. Plus, I need to ensure I'm not overriding anything in the repo.
**Setting up React app structure**

I can use apply_patch for file editing, and it’s fine to run shell commands to initialize package.json and install dependencies. However, to keep the user satisfied, I can create files directly instead. The Vite config involves many files, but I can still craft them. I might want to go the route of using npm to create the project with the react-ts template, adding Tailwind and Zustand afterward. Instead of installing node modules, I’ll focus on creating a minimal project structure with essential files like package.json and vite.config.ts, plus build scripts to ensure it’s deploy-ready.
**Implementing app state with Zustand**

I plan to add a Zustand store for managing app state, including uploads and analysis results, and maybe compliance information. For the drag-and-drop feature, I’ll use a Dropzone component, possibly via react-dropzone or even just HTML drag events to keep things simple. I'll keep dependencies minimal: react, react-dom, react-router-dom, Zustand, Tailwind CSS, PostCSS, and TypeScript types for dev dependencies.

I'll also structure the package.json and include an `.env.example` with VITE_STRIPE_PUBLIC_KEY and VITE_API_BASE_URL. Along with that, I’ll create a Stripe checkout button component that redirects to a dummy URL. The app will include several pages: Home, Upload, Analysis, Opportunities, Pricing, and Contact, each with designated functionalities.
**Setting up components and configuration**

I’m planning to add a Navbar and Footer, along with a ResultsCard component for the app. I need to configure Tailwind CSS by using the src/index.css file with the necessary @tailwind directives and setting up a tailwind.config.ts file. I’ll also create tsconfig.json and vite.config.ts, plus index.html for the app structure. I shouldn't forget to set up src/main.tsx with routing and draft a README with deployment steps for Vercel or Netlify. It’s important to explore the repository first to avoid any conflicts.
[2025-09-08T17:17:59] codex
**Setting up React app structure**

I can use apply_patch for file editing, and it’s fine to run shell commands to initialize package.json and install dependencies. However, to keep the user satisfied, I can create files directly instead. The Vite config involves many files, but I can still craft them. I might want to go the route of using npm to create the project with the react-ts template, adding Tailwind and Zustand afterward. Instead of installing node modules, I’ll focus on creating a minimal project structure with essential files like package.json and vite.config.ts, plus build scripts to ensure it’s deploy-ready.
[2025-09-08T17:17:59] codex
**Implementing app state with Zustand**

I plan to add a Zustand store for managing app state, including uploads and analysis results, and maybe compliance information. For the drag-and-drop feature, I’ll use a Dropzone component, possibly via react-dropzone or even just HTML drag events to keep things simple. I'll keep dependencies minimal: react, react-dom, react-router-dom, Zustand, Tailwind CSS, PostCSS, and TypeScript types for dev dependencies.

I'll also structure the package.json and include an `.env.example` with VITE_STRIPE_PUBLIC_KEY and VITE_API_BASE_URL. Along with that, I’ll create a Stripe checkout button component that redirects to a dummy URL. The app will include several pages: Home, Upload, Analysis, Opportunities, Pricing, and Contact, each with designated functionalities.
[2025-09-08T17:17:59] codex
**Setting up components and configuration**

I’m planning to add a Navbar and Footer, along with a ResultsCard component for the app. I need to configure Tailwind CSS by using the src/index.css file with the necessary @tailwind directives and setting up a tailwind.config.ts file. I’ll also create tsconfig.json and vite.config.ts, plus index.html for the app structure. I shouldn't forget to set up src/main.tsx with routing and draft a README with deployment steps for Vercel or Netlify. It’s important to explore the repository first to avoid any conflicts.
[2025-09-08T17:17:59] codex

I'll scaffold a new Vite + React + TS app in consultant-portal/, configure Tailwind, add routing, pages, components, Zustand state, and a README with deploy steps and .env examples. Then I’ll verify TypeScript builds locally.
[2025-09-08T17:18:01] exec bash -lc 'ls -la' in /Users/panda/Desktop/EUFM
[2025-09-08T17:18:01] bash -lc 'ls -la' succeeded in 86ms:
total 1320
drwxr-xr-x   79 panda  staff   2528 Sep  8 20:10 .
drwx------+  17 panda  staff    544 Sep  7 19:35 ..
-rw-r--r--@   1 panda  staff  10244 Sep  7 18:05 .DS_Store
drwxr-xr-x    3 panda  staff     96 Sep  8 20:03 .claude
drwxr-xr-x    3 panda  staff     96 Sep  8 16:46 .cursor
-rw-r--r--    1 panda  staff    798 Sep  8 13:28 .env
-rw-r--r--    1 panda  staff    196 Sep  7 21:10 .env.example
drwxr-xr-x   17 panda  staff    544 Sep  8 20:03 .git
drwxr-xr-x    3 panda  staff     96 Sep  3 11:39 .github
-rw-r--r--    1 panda  staff     71 Sep  8 15:04 .gitignore
-rw-r--r--    1 panda  staff   6792 Sep  8 17:14 AGENTS.md
-rw-r--r--    1 panda  staff   5024 Sep  8 19:19 AGENT_QUICK_REFERENCE.md
-rw-r--r--    1 panda  staff   5123 Sep  8 17:38 CLAUDE_CODE_INSTRUCTIONS.md
-rw-r--r--    1 panda  staff   7825 Sep  8 17:31 CLAUDE_CODE_ORIENTATION.md
-rw-r--r--    1 panda  staff  11019 Sep  6 20:32 CLAUDE_MISSION_BRIEFING.md
-rw-r--r--    1 panda  staff   7089 Sep  8 17:47 CLAUDE_READING_INSTRUCTION.md
-rw-r--r--    1 panda  staff  15420 Sep  6 21:26 CLAUDE_SESSION_MEMORY.md
-rw-r--r--    1 panda  staff   2966 Sep  7 18:11 CLAUDE_SESSION_STARTER.md
-rw-r--r--    1 panda  staff  15118 Sep  8 13:02 CODEX_HANDOFF_BRIEFING.md
[2025-09-08T17:18:01] tokens used: 8466

[2025-09-08T17:18:08] thinking

**Creating project structure**

I'm setting up a node project in a new directory called "consultant-portal." I won’t run npm install to keep the node_modules lightweight. I'll carefully build the project scaffolding ensuring, I don't interfere with the main package.json scripts. The consultant-portal will have its own package.json. I’ll create a structured directory with various essential files, including HTML and TypeScript configurations, and set Tailwind content paths. Finally, I’ll implement basic-and drag-drop functionality.
**Implementing project features**

To keep things straightforward, I'll use an input type of "file" and manage file drop events. I'll implement a Zustand store to track uploaded files, analysis results, compliance results, and opportunities, starting with some simple placeholder actions and values. For routing, I can utilize either createBrowserRouter or BrowserRouter from react-router-dom. I'll also add a placeholder Stripe button using the `VITE_STRIPE_PUBLIC_KEY`, which will log actions and optionally redirect to '/success'. Finally, I'll include error handling and document the deployment steps for Vercel and Netlify in the README.
[2025-09-08T17:18:14] codex
**Implementing project features**

To keep things straightforward, I'll use an input type of "file" and manage file drop events. I'll implement a Zustand store to track uploaded files, analysis results, compliance results, and opportunities, starting with some simple placeholder actions and values. For routing, I can utilize either createBrowserRouter or BrowserRouter from react-router-dom. I'll also add a placeholder Stripe button using the `VITE_STRIPE_PUBLIC_KEY`, which will log actions and optionally redirect to '/success'. Finally, I'll include error handling and document the deployment steps for Vercel and Netlify in the README.
[2025-09-08T17:18:14] codex

Scaffolding the Vite + React + TS app with Tailwind, routing, pages, components, Zustand store, and deploy README under consultant-portal/.
[2025-09-08T17:18:21] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/package.json
{
  "name": "consultant-portal",
  "version": "0.1.0",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.26.1",
    "zustand": "^4.5.2"
  },
  "devDependencies": {
    "@types/react": "^18.3.7",
    "@types/react-dom": "^18.3.0",
    "autoprefixer": "^10.4.20",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.12",
    "typescript": "^5.5.4",
    "vite": "^5.4.2"
  }
}

[2025-09-08T17:18:21] apply_patch(auto_approved=true) exited 0 in 405ms:
Success. Updated the following files:
A consultant-portal/package.json
[2025-09-08T17:18:21] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+

[2025-09-08T17:18:21] tokens used: 5915
[2025-09-08T17:18:21] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+

[2025-09-08T17:18:27] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/tsconfig.json
{
  "extends": "./tsconfig.node.json",
  "compilerOptions": {
    "jsx": "react-jsx",
    "baseUrl": ".",
    "paths": {
      "@components/*": ["src/components/*"],
      "@pages/*": ["src/pages/*"],
      "@store/*": ["src/store/*"],
      "@lib/*": ["src/lib/*"]
    }
  },
  "include": ["src"],
  "exclude": ["dist", "node_modules"]
}

[2025-09-08T17:18:27] apply_patch(auto_approved=true) exited 0 in 178ms:
Success. Updated the following files:
A consultant-portal/tsconfig.json
[2025-09-08T17:18:27] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+

[2025-09-08T17:18:27] tokens used: 705
[2025-09-08T17:18:27] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+

[2025-09-08T17:18:36] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/tsconfig.node.json
{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "Bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true
  },
  "include": ["vite.config.ts"]
}

[2025-09-08T17:18:37] apply_patch(auto_approved=true) exited 0 in 1.03s:
Success. Updated the following files:
A consultant-portal/tsconfig.node.json
[2025-09-08T17:18:37] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+

[2025-09-08T17:18:37] tokens used: 446
[2025-09-08T17:18:37] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+

[2025-09-08T17:18:49] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/vite.config.ts
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  server: {
    port: 5173
  },
  preview: {
    port: 4173
  }
});

[2025-09-08T17:18:51] apply_patch(auto_approved=true) exited 0 in 1.11s:
Success. Updated the following files:
A consultant-portal/vite.config.ts
[2025-09-08T17:18:51] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:18:51] tokens used: 12400
[2025-09-08T17:18:51] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..415f8515c19e3299be1833702000a3f34c9a7dc7
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+


[2025-09-08T17:18:54] thinking

**Updating devDependencies**

I realized that I used @vitejs/plugin-react but forgot to add it to the devDependencies in package.json. It's important to include it so that everything runs smoothly. I need to make sure to update the package.json file to reflect this addition. I'll apply the patch to make sure @vitejs/plugin-react is listed there. This should help prevent any potential issues later on.
[2025-09-08T17:18:57] apply_patch auto_approved=true:
M /Users/panda/Desktop/EUFM/consultant-portal/package.json
@@ -17,2 +17,3 @@
   "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
     "@types/react": "^18.3.7",
@@ -26,2 +27 @@
 }
-
[2025-09-08T17:18:59] apply_patch(auto_approved=true) exited 0 in 1.28s:
Success. Updated the following files:
M consultant-portal/package.json
[2025-09-08T17:18:59] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:18:59] tokens used: 456
[2025-09-08T17:18:59] turn diff:
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:06] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/index.html
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
    <title>EUFM Consultant Portal</title>
  </head>
  <body class="bg-gray-50 text-gray-900">
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
  </html>

[2025-09-08T17:19:07] apply_patch(auto_approved=true) exited 0 in 1.26s:
Success. Updated the following files:
A consultant-portal/index.html
[2025-09-08T17:19:07] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:07] tokens used: 477
[2025-09-08T17:19:07] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:10] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/postcss.config.js
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};

[2025-09-08T17:19:12] apply_patch(auto_approved=true) exited 0 in 1.74s:
Success. Updated the following files:
A consultant-portal/postcss.config.js
[2025-09-08T17:19:12] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:12] tokens used: 340
[2025-09-08T17:19:12] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:16] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/tailwind.config.ts
import type { Config } from 'tailwindcss';

export default {
  content: [
    './index.html',
    './src/**/*.{ts,tsx}',
  ],
  theme: {
    extend: {
      colors: {
        eufm: {
          primary: '#0ea5e9',
          dark: '#0b5c7a',
          accent: '#22c55e',
        },
      },
    },
  },
  plugins: [],
} satisfies Config;

[2025-09-08T17:19:18] apply_patch(auto_approved=true) exited 0 in 2.01s:
Success. Updated the following files:
A consultant-portal/tailwind.config.ts
[2025-09-08T17:19:18] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:18] tokens used: 1343
[2025-09-08T17:19:18] turn diff:
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:26] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/.env.example
# Environment variables for Consultant Portal (Vite)

# Public Stripe key for client-side initialization (placeholder)
VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX

# Optional: API base URL if connecting to backend services
VITE_API_BASE_URL=https://api.example.com

[2025-09-08T17:19:29] apply_patch(auto_approved=true) exited 0 in 2.59s:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

Success. Updated the following files:
A consultant-portal/.env.example
[2025-09-08T17:19:29] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:29] tokens used: 339
[2025-09-08T17:19:29] turn diff:
[2025-09-08T17:19:34] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/index.css
@tailwind base;
@tailwind components;
@tailwind utilities;

/* App-level utility classes */
.container-max {
  @apply max-w-6xl mx-auto px-4;
}

[2025-09-08T17:19:37] apply_patch(auto_approved=true) exited 0 in 3.49s:
Success. Updated the following files:
A consultant-portal/src/index.css
[2025-09-08T17:19:37] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:37] tokens used: 348
[2025-09-08T17:19:37] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:43] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/main.tsx
import React from 'react';
import { createRoot } from 'react-dom/client';
import { BrowserRouter } from 'react-router-dom';
import App from './App';
import './index.css';

const container = document.getElementById('root');
if (!container) {
  // Fail fast if root is missing
  throw new Error('Root container not found');
}

createRoot(container).render(
  <React.StrictMode>
    <BrowserRouter>
      <App />
    </BrowserRouter>
  </React.StrictMode>
);

[2025-09-08T17:19:44] apply_patch(auto_approved=true) exited 0 in 1.47s:
Success. Updated the following files:
A consultant-portal/src/main.tsx
[2025-09-08T17:19:44] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:46] tokens used: 327
[2025-09-08T17:19:46] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:51] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/App.tsx
import { Routes, Route, Navigate } from 'react-router-dom';
import Navbar from '@components/Navbar';
import Footer from '@components/Footer';
import Home from '@pages/Home';
import Upload from '@pages/Upload';
import Analysis from '@pages/Analysis';
import Opportunities from '@pages/Opportunities';
import Pricing from '@pages/Pricing';
import Contact from '@pages/Contact';

function App() {
  return (
    <div className="min-h-screen flex flex-col">
      <Navbar />
      <main className="flex-1">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/upload" element={<Upload />} />
          <Route path="/analysis" element={<Analysis />} />
          <Route path="/opportunities" element={<Opportunities />} />
          <Route path="/pricing" element={<Pricing />} />
          <Route path="/contact" element={<Contact />} />
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>
      </main>
      <Footer />
    </div>
  );
}

export default App;

[2025-09-08T17:19:55] apply_patch(auto_approved=true) exited 0 in 3.56s:
Success. Updated the following files:
A consultant-portal/src/App.tsx
[2025-09-08T17:19:55] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:19:55] tokens used: 604
[2025-09-08T17:19:55] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:20:01] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/lib/logger.ts
export type LogLevel = 'debug' | 'info' | 'warn' | 'error';

const LOG_LEVELS: Record<LogLevel, number> = {
  debug: 10,
  info: 20,
  warn: 30,
  error: 40,
};

const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');

export function log(level: LogLevel, message: string, meta?: unknown) {
  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
  const payload = meta !== undefined ? { message, meta } : { message };
  // eslint-disable-next-line no-console
  console[level](`[${level.toUpperCase()}]`, payload);
}

[2025-09-08T17:20:05] apply_patch(auto_approved=true) exited 0 in 3.69s:
Success. Updated the following files:
A consultant-portal/src/lib/logger.ts
[2025-09-08T17:20:05] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:20:05] tokens used: 755
[2025-09-08T17:20:05] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

};

export type DeadlineInfo = {
  program: string;
  deadline: string; // ISO date string or friendly
};

export type Opportunity = {
  id: string;
  title: string;
  program: string;
  amount: string;
  matchScore: number; // 0-100
};

type AppState = {
  files: UploadedFile[];
  compliance: ComplianceResult[];
  deadlines: DeadlineInfo[];
  opportunities: Opportunity[];
  setFiles: (files: UploadedFile[]) => void;
  analyze: () => void;
  generateDemoOpportunities: () => void;
  clear: () => void;
};

export const useAppStore = create<AppState>((set, get) => ({
  files: [],
  compliance: [],
  deadlines: [],
  opportunities: [],

  setFiles: (files) => {
    log('info', 'Setting uploaded files', { count: files.length });
    set({ files });
  },

  analyze: () => {
    try {
      const { files } = get();
      // Demo analysis: fabricate results based on file presence
      const hasFiles = files.length > 0;
      const compliance: ComplianceResult[] = [
        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
        { check: 'SME status confirmed', status: 'pass' },
        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
      ];
      const deadlines: DeadlineInfo[] = [
        { program: 'Horizon Europe', deadline: '2025-02-15' },
        { program: 'Digital Europe', deadline: '2025-03-01' },
      ];
      set({ compliance, deadlines });
      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
    } catch (err) {
      log('error', 'Analysis failed', err);
    }
  },

  generateDemoOpportunities: () => {
    const opportunities: Opportunity[] = [
      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
[2025-09-08T17:20:24] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/store/useAppStore.ts
import { create } from 'zustand';
import { log } from '@lib/logger';

export type UploadedFile = {
  name: string;
  size: number;
  type: string;
};

export type ComplianceResult = {
  check: string;
  status: 'pass' | 'warn' | 'fail';
  detail?: string;
      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
    ];
    set({ opportunities });
    log('info', 'Demo opportunities generated', { count: opportunities.length });
  },

  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
}));

[2025-09-08T17:20:28] apply_patch(auto_approved=true) exited 0 in 4.10s:
Success. Updated the following files:
A consultant-portal/src/store/useAppStore.ts
[2025-09-08T17:20:28] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:20:28] tokens used: 1194
[2025-09-08T17:20:28] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:20:34] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/Navbar.tsx
import { Link, NavLink } from 'react-router-dom';

const navItems = [
  { to: '/', label: 'Home' },
  { to: '/upload', label: 'Upload' },
  { to: '/analysis', label: 'Analysis' },
  { to: '/opportunities', label: 'Opportunities' },
  { to: '/pricing', label: 'Pricing' },
  { to: '/contact', label: 'Contact' },
];

function Navbar() {
  return (
    <header className="bg-white border-b border-gray-200">
      <div className="container-max h-16 flex items-center justify-between">
        <Link to="/" className="font-semibold text-eufm-dark">
          EUFM Consultant Portal
        </Link>
        <nav className="flex gap-4 text-sm">
          {navItems.map((item) => (
            <NavLink
              key={item.to}
              to={item.to}
              className={({ isActive }) =>
                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
              }
            >
              {item.label}
            </NavLink>
          ))}
        </nav>
      </div>
    </header>
  );
}

export default Navbar;

[2025-09-08T17:20:38] apply_patch(auto_approved=true) exited 0 in 3.83s:
Success. Updated the following files:
A consultant-portal/src/components/Navbar.tsx
[2025-09-08T17:20:38] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:20:38] tokens used: 1393
[2025-09-08T17:20:38] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:21:28] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/Footer.tsx
function Footer() {
  return (
    <footer className="bg-white border-t border-gray-200 mt-8">
      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
        <p className="text-gray-500">AI Agent Orchestration System</p>
      </div>
    </footer>
  );
}

export default Footer;

[2025-09-08T17:21:30] apply_patch(auto_approved=true) exited 0 in 2.28s:
Success. Updated the following files:
A consultant-portal/src/components/Footer.tsx
[2025-09-08T17:21:30] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:21:32] tokens used: 721
[2025-09-08T17:21:32] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:21:43] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/Dropzone.tsx
import { useCallback, useState } from 'react';
import { useAppStore } from '@store/useAppStore';

type Props = {
  onFilesAccepted?: (files: File[]) => void;
};

function Dropzone({ onFilesAccepted }: Props) {
  const setFiles = useAppStore((s) => s.setFiles);
  const [isDragging, setDragging] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const handleFiles = useCallback(
    (fileList: FileList | null) => {
      setError(null);
      if (!fileList || fileList.length === 0) return;
      const files = Array.from(fileList);
      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
      setFiles(uploaded);
      onFilesAccepted?.(files);
    },
    [onFilesAccepted, setFiles]
  );

  return (
    <div>
      <div
        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
        }`}
        onDragOver={(e) => {
          e.preventDefault();
          setDragging(true);
        }}
        onDragLeave={() => setDragging(false)}
        onDrop={(e) => {
          e.preventDefault();
          setDragging(false);
          try {
            handleFiles(e.dataTransfer.files);
          } catch (err) {
            setError('Failed to process dropped files.');
          }
        }}
      >
        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
        <label className="inline-block">
          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
          <input
            type="file"
            className="hidden"
            multiple
            onChange={(e) => {
              try {
                handleFiles(e.target.files);
                e.currentTarget.value = '';
              } catch (err) {
                setError('Failed to process selected files.');
              }
            }}
          />
        </label>
      </div>
      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
    </div>
  );
}

export default Dropzone;

[2025-09-08T17:21:46] apply_patch(auto_approved=true) exited 0 in 3.27s:
Success. Updated the following files:
A consultant-portal/src/components/Dropzone.tsx
[2025-09-08T17:21:46] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:21:49] tokens used: 1010
[2025-09-08T17:21:49] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:21:54] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/ResultsCard.tsx
type Props = {
  title: string;
  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
};

function statusColor(status?: 'pass' | 'warn' | 'fail') {
  switch (status) {
    case 'pass':
      return 'text-green-600';
    case 'warn':
function ResultsCard({ title, items }: Props) {
  return (
    <div className="bg-white border border-gray-200 rounded-lg p-4">
      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
      <ul className="space-y-2">
        {items.map((item) => (
          <li key={item.label} className="flex items-center justify-between text-sm">
            <span className="text-gray-600">{item.label}</span>
            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
          </li>
        ))}
      </ul>
    </div>
      return 'text-yellow-600';
    case 'fail':
      return 'text-red-600';
    default:
      return 'text-gray-700';
  }
}

  );
}

export default ResultsCard;

[2025-09-08T17:22:00] apply_patch(auto_approved=true) exited 0 in 6.53s:
Success. Updated the following files:
A consultant-portal/src/components/ResultsCard.tsx
[2025-09-08T17:22:00] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:00] tokens used: 1192
[2025-09-08T17:22:00] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:08] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/PricingTable.tsx
import StripeCheckoutButton from './StripeCheckoutButton';

function PricingTable() {
  return (
    <div className="grid md:grid-cols-3 gap-6">
      <div className="bg-white border border-gray-200 rounded-lg p-6">
        <h3 className="text-lg font-semibold">Starter</h3>
        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
        <ul className="mt-4 space-y-2 text-sm text-gray-600">
          <li>Upload up to 3 documents</li>
          <li>Basic compliance checks</li>
          <li>Email support</li>
        </ul>
      </div>

      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
        <h3 className="text-lg font-semibold">Professional</h3>
        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
        <ul className="mt-4 space-y-2 text-sm text-gray-600">
          <li>Unlimited uploads</li>
          <li>Advanced deadline tracking</li>
          <li>AI-generated opportunity matching</li>
          <li>Priority support</li>
        </ul>
        <div className="mt-6">
          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
        </div>
      </div>

      <div className="bg-white border border-gray-200 rounded-lg p-6">
        <h3 className="text-lg font-semibold">Enterprise</h3>
        <p className="text-3xl font-bold mt-2">Custom</p>
        <ul className="mt-4 space-y-2 text-sm text-gray-600">
          <li>Dedicated onboarding</li>
          <li>Enterprise SLA</li>
          <li>Custom integrations</li>
        </ul>
        <div className="mt-6">
          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
        </div>
      </div>
    </div>
  );
}

export default PricingTable;

[2025-09-08T17:22:15] apply_patch(auto_approved=true) exited 0 in 6.24s:
Success. Updated the following files:
A consultant-portal/src/components/PricingTable.tsx
[2025-09-08T17:22:15] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:15] tokens used: 1116
[2025-09-08T17:22:15] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:20] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/components/StripeCheckoutButton.tsx
import { log } from '@lib/logger';

type Props = {
  planId: string;
  label?: string;
};

// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;

  const handleClick = async () => {
    try {
      if (!publicKey) {
        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
        return;
      }
      log('info', 'Stripe checkout clicked', { planId });
      // In a real integration, call your backend to create a Checkout Session, then redirect.
      // This is a placeholder action.
      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
    } catch (err) {
      log('error', 'Stripe checkout failed', err);
      alert('Something went wrong starting checkout.');
    }
  };

  return (
    <button
      onClick={handleClick}
      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
      aria-label="Start Stripe checkout"
    >
      {label}
    </button>
  );
}

export default StripeCheckoutButton;

[2025-09-08T17:22:24] apply_patch(auto_approved=true) exited 0 in 3.70s:
Success. Updated the following files:
A consultant-portal/src/components/StripeCheckoutButton.tsx
[2025-09-08T17:22:24] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:24] tokens used: 1189
[2025-09-08T17:22:24] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:33] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Home.tsx
import { Link } from 'react-router-dom';

function Home() {
  return (
    <section className="container-max py-10">
      <div className="text-center">
        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
        <div className="mt-6 flex justify-center gap-3">
          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
        </div>
      </div>
      <div className="mt-10 grid md:grid-cols-3 gap-6">
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h3 className="font-medium">Smart Uploads</h3>
          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
        </div>
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h3 className="font-medium">Compliance Insights</h3>
          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
        </div>
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <h3 className="font-medium">Matched Opportunities</h3>
          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
        </div>
      </div>
    </section>
  );
}

export default Home;

[2025-09-08T17:22:41] apply_patch(auto_approved=true) exited 0 in 7.91s:
Success. Updated the following files:
A consultant-portal/src/pages/Home.tsx
[2025-09-08T17:22:41] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:41] tokens used: 1008
[2025-09-08T17:22:41] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:22:56] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Upload.tsx
import Dropzone from '@components/Dropzone';
import { useNavigate } from 'react-router-dom';
import { useAppStore } from '@store/useAppStore';

function Upload() {
  const navigate = useNavigate();
  const analyze = useAppStore((s) => s.analyze);

  return (
    <section className="container-max py-10">
      <h2 className="text-2xl font-semibold">Upload Documents</h2>
      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
      <div className="mt-6">
        <Dropzone
          onFilesAccepted={() => {
            analyze();
            navigate('/analysis');
          }}
        />
      </div>
    </section>
  );
}

export default Upload;

[2025-09-08T17:23:04] apply_patch(auto_approved=true) exited 0 in 8.04s:
Success. Updated the following files:
A consultant-portal/src/pages/Upload.tsx
[2025-09-08T17:23:04] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:04] tokens used: 937
[2025-09-08T17:23:04] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:17] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Analysis.tsx
import ResultsCard from '@components/ResultsCard';
import { useAppStore } from '@store/useAppStore';

function Analysis() {
  const { compliance, deadlines, files } = useAppStore((s) => ({
    compliance: s.compliance,
    deadlines: s.deadlines,
    files: s.files,
  }));

  return (
    <section className="container-max py-10">
      <h2 className="text-2xl font-semibold">Analysis Results</h2>
      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>

      <div className="mt-6 grid md:grid-cols-2 gap-6">
        <ResultsCard
          title="Compliance"
          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
        />
        <ResultsCard
          title="Deadlines"
          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
        />
      </div>

      <div className="mt-8">
        <h3 className="font-medium">Uploaded Files</h3>
        {files.length === 0 ? (
          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
        ) : (
          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
            {files.map((f) => (
              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
            ))}
          </ul>
        )}
      </div>
    </section>
  );
}

export default Analysis;

[2025-09-08T17:23:24] apply_patch(auto_approved=true) exited 0 in 7.09s:
Success. Updated the following files:
A consultant-portal/src/pages/Analysis.tsx
[2025-09-08T17:23:24] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:24] tokens used: 859
[2025-09-08T17:23:24] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:33] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Opportunities.tsx
import { useEffect } from 'react';
import { useAppStore } from '@store/useAppStore';

function Opportunities() {
  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
    opportunities: s.opportunities,
    generateDemoOpportunities: s.generateDemoOpportunities,
  }));

  useEffect(() => {
    if (opportunities.length === 0) generateDemoOpportunities();
  }, [opportunities.length, generateDemoOpportunities]);

  return (
    <section className="container-max py-10">
      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>

      <div className="mt-6 grid md:grid-cols-2 gap-6">
        {opportunities.map((o) => (
          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
            <div className="flex items-start justify-between">
              <div>
                <h3 className="font-medium text-gray-900">{o.title}</h3>
                <p className="text-sm text-gray-600">{o.program}</p>
              </div>
              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
            </div>
            <div className="mt-4">
              <div className="h-2 bg-gray-200 rounded">
                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
              </div>
              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
}

export default Opportunities;

[2025-09-08T17:23:44] apply_patch(auto_approved=true) exited 0 in 10.62s:
Success. Updated the following files:
A consultant-portal/src/pages/Opportunities.tsx
[2025-09-08T17:23:44] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:44] tokens used: 1191
[2025-09-08T17:23:44] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:48] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Pricing.tsx
import PricingTable from '@components/PricingTable';

function Pricing() {
  return (
    <section className="container-max py-10">
      <h2 className="text-2xl font-semibold">Pricing</h2>
      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
      <div className="mt-6">
        <PricingTable />
      </div>
    </section>
  );
}

export default Pricing;

[2025-09-08T17:23:56] apply_patch(auto_approved=true) exited 0 in 8.02s:
Success. Updated the following files:
A consultant-portal/src/pages/Pricing.tsx
[2025-09-08T17:23:56] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:23:56] tokens used: 7820
[2025-09-08T17:23:56] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:11] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Contact.tsx
import { FormEvent, useState } from 'react';
import { log } from '@lib/logger';

function Contact() {
  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');

  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus('submitting');
    try {
      const form = new FormData(e.currentTarget);
      const payload = Object.fromEntries(form.entries());
      log('info', 'Demo request submitted', payload);
      await new Promise((r) => setTimeout(r, 500));
      setStatus('submitted');
    } catch (err) {
      setStatus('error');
    }
  };

  return (
    <section className="container-max py-10">
      <h2 className="text-2xl font-semibold">Request a Demo</h2>
      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>

      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
        <div>
          <label className="block text-sm text-gray-700">Name</label>
          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
        </div>
        <div>
          <label className="block text-sm text-gray-700">Email</label>
          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
        </div>
        <div>
          <label className="block text-sm text-gray-700">Company</label>
          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
        </div>
        <div>
          <label className="block text-sm text-gray-700">Message</label>
          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
        </div>
        <button
          disabled={status === 'submitting'}
          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
        >
          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
        </button>
        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
      </form>
    </section>
  );
}

export default Contact;

[2025-09-08T17:24:19] apply_patch(auto_approved=true) exited 0 in 8.19s:
Success. Updated the following files:
A consultant-portal/src/pages/Contact.tsx
[2025-09-08T17:24:19] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:19] tokens used: 1105
[2025-09-08T17:24:19] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:23] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/_.md
// Placeholder file to ensure directory creation in some tooling

[2025-09-08T17:24:33] apply_patch(auto_approved=true) exited 0 in 10.09s:
Success. Updated the following files:
A consultant-portal/src/pages/_.md
[2025-09-08T17:24:33] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:33] tokens used: 947
[2025-09-08T17:24:33] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:36] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Analysis.md
This file intentionally left minimal to keep directory handy for editors.

[2025-09-08T17:24:44] apply_patch(auto_approved=true) exited 0 in 8.58s:
Success. Updated the following files:
A consultant-portal/src/pages/Analysis.md
[2025-09-08T17:24:44] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:24:44] tokens used: 150
[2025-09-08T17:24:44] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..ad62ea95f0aaddc69ddae4e73453496a4989532c
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,27 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+


[2025-09-08T17:24:50] thinking

**Addressing project setup**

I realized we added extra markdown files unnecessarily. It’s minor, but now I need to focus on getting the Contact page and Pricing page completed. Import paths need checking, as I set the tsconfig baseUrl to dot with paths. I found out that Vite doesn’t support TypeScript path aliases out of the box and needs a specific configuration. To simplify, I might consider using relative imports instead, but since we've already used aliases, adding the vite-tsconfig-paths plugin seems like the safer approach.
[2025-09-08T17:24:53] apply_patch auto_approved=true:
M /Users/panda/Desktop/EUFM/consultant-portal/package.json
@@ -18,2 +18,3 @@
     "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
     "@types/react": "^18.3.7",
[2025-09-08T17:25:03] apply_patch(auto_approved=true) exited 0 in 10.00s:
Success. Updated the following files:
M consultant-portal/package.json
[2025-09-08T17:25:03] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:25:03] tokens used: 462
[2025-09-08T17:25:03] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..15109c368f554d62b306106f86582a3320acf760
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});
+

[2025-09-08T17:25:06] apply_patch auto_approved=true:
M /Users/panda/Desktop/EUFM/consultant-portal/vite.config.ts
@@ -2,2 +2,3 @@
 import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
 
@@ -5,3 +6,3 @@
 export default defineConfig({
-  plugins: [react()],
+  plugins: [react(), tsconfigPaths()],
   server: {
@@ -13,2 +14 @@
 });
-
[2025-09-08T17:25:16] apply_patch(auto_approved=true) exited 0 in 9.67s:
Success. Updated the following files:
M consultant-portal/vite.config.ts
[2025-09-08T17:25:16] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});

[2025-09-08T17:25:16] tokens used: 269
[2025-09-08T17:25:16] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});

[2025-09-08T17:25:21] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/src/pages/Pricing.md
Helper file for editors.

[2025-09-08T17:25:31] apply_patch(auto_approved=true) exited 0 in 10.25s:
Success. Updated the following files:
A consultant-portal/src/pages/Pricing.md
[2025-09-08T17:25:31] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.md b/consultant-portal/src/pages/Pricing.md
new file mode 100644
index 0000000000000000000000000000000000000000..ada5fffb8015d7359df32a905e93b8586a9e1b01
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.md
@@ -0,0 +1,2 @@
+Helper file for editors.
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});

[2025-09-08T17:25:31] tokens used: 233
[2025-09-08T17:25:31] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.md b/consultant-portal/src/pages/Pricing.md
new file mode 100644
index 0000000000000000000000000000000000000000..ada5fffb8015d7359df32a905e93b8586a9e1b01
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.md
@@ -0,0 +1,2 @@
+Helper file for editors.
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});

[2025-09-08T17:25:59] tokens used: 1220
[2025-09-08T17:25:59] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.md b/consultant-portal/src/pages/Pricing.md
new file mode 100644
index 0000000000000000000000000000000000000000..ada5fffb8015d7359df32a905e93b8586a9e1b01
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.md
@@ -0,0 +1,2 @@
+Helper file for editors.
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});


[2025-09-08T17:26:07] thinking

**Fixing patch formatting**

I noticed that the apply_patch failed because of a formatting error. It seems I may have included triple backticks within the patch, which caused confusion. Although the syntax looks fine, the stars formatting might have collided. I need to make sure that each file block begins with a proper header. It looks like I forgot to prefix each line with a plus sign, which is essential. I’ll retry with the correct format!
[2025-09-08T17:26:21] apply_patch auto_approved=true:
A /Users/panda/Desktop/EUFM/consultant-portal/README.md
# EUFM Consultant Portal (Vite + React + TypeScript)

Deploy‑ready React web app for EUFM (European Union Funds Manager) — AI Agent Orchestration System. Includes routing, Tailwind CSS styling, Zustand state, drag‑and‑drop uploads, analysis and opportunities views, pricing with a placeholder Stripe checkout, and a contact form.

## Features

- React + TypeScript (Vite)
- Tailwind CSS styling
- React Router pages:
  - `/` Home
  - `/upload` Drag & drop upload
  - `/analysis` Deadline/compliance results
  - `/opportunities` Demo matched funding calls
  - `/pricing` €299/month with Stripe placeholder button
  - `/contact` Demo request form
- Components: Navbar, Footer, Dropzone, ResultsCard, PricingTable, StripeCheckoutButton
- State: Zustand demo store (files, compliance, deadlines, opportunities)
- Error handling and lightweight logging

## Getting Started

- Node.js 18+ recommended

```bash
# from repo root
cd consultant-portal
npm install
npm run dev
```

Build and preview:

```bash
npm run build
npm run preview
```

## Environment Variables

Copy `.env.example` to `.env` and set values:

```bash
VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
VITE_API_BASE_URL=https://api.example.com
```

Notes:
- `VITE_` prefix is required for variables used in the browser.
- The current Stripe checkout is a placeholder alert; wire it to your backend when ready.

## Stripe Checkout (Placeholder)

The `StripeCheckoutButton` component demonstrates where you would trigger checkout. In production:

1) Create a Checkout Session on your backend with Stripe secret key.
2) Return the session ID to the client.
3) Use Stripe.js to redirect to Checkout.

Until a backend exists, the button shows a placeholder alert and logs events.

## Deploy

### Vercel

- Framework Preset: Vite
- Build Command: `npm run build`
- Output Directory: `dist`
- Install Command: `npm install`
- Environment Variables: add from `.env` as needed

You can deploy with Vercel CLI:

```bash
vercel --cwd consultant-portal
```

Or via dashboard, setting the project root to `consultant-portal`.

### Netlify

- Build Command: `npm run build`
- Publish Directory: `dist`
- Base Directory: `consultant-portal`
- Environment Variables: add from `.env`

CLI deploy example:

```bash
cd consultant-portal
netlify init   # select site
netlify deploy --build --prod
```

## Project Structure

```
consultant-portal/
├── index.html
├── package.json
├── postcss.config.js
├── tailwind.config.ts
├── tsconfig.json
├── tsconfig.node.json
├── vite.config.ts
├── .env.example
└── src/
    ├── App.tsx
    ├── index.css
    ├── main.tsx
    ├── lib/logger.ts
    ├── store/useAppStore.ts
    ├── components/
    │   ├── Dropzone.tsx
    │   ├── Footer.tsx
    │   ├── Navbar.tsx
    │   ├── PricingTable.tsx
    │   └── StripeCheckoutButton.tsx
    └── pages/
        ├── Analysis.tsx
        ├── Contact.tsx
        ├── Home.tsx
        ├── Opportunities.tsx
        ├── Pricing.tsx
        └── Upload.tsx
```

## Notes on Quality & Safety

- TypeScript strict mode enabled; basic try/catch and logging provided
- Tailwind content paths scoped to `index.html` and `src/**/*.{ts,tsx}`
- No server code; all data shown is demo/local state
- Keep files <500 lines and functions focused per EUFM guidelines

## Next Steps

- Connect to backend APIs for real analysis and opportunity data
- Implement Stripe Checkout via server‑side session creation
- Add authentication and protected routes if needed
- Set up analytics and error monitoring

[2025-09-08T17:26:33] apply_patch(auto_approved=true) exited 0 in 11.47s:
Success. Updated the following files:
A consultant-portal/README.md
[2025-09-08T17:26:33] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/README.md b/consultant-portal/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..1c1afd37391a8ab98ccf69db7f7a6e5d6292d6da
--- /dev/null
+++ b/consultant-portal/README.md
@@ -0,0 +1,140 @@
+# EUFM Consultant Portal (Vite + React + TypeScript)
+
+Deploy‑ready React web app for EUFM (European Union Funds Manager) — AI Agent Orchestration System. Includes routing, Tailwind CSS styling, Zustand state, drag‑and‑drop uploads, analysis and opportunities views, pricing with a placeholder Stripe checkout, and a contact form.
+
+## Features
+
+- React + TypeScript (Vite)
+- Tailwind CSS styling
+- React Router pages:
+  - `/` Home
+  - `/upload` Drag & drop upload
+  - `/analysis` Deadline/compliance results
+  - `/opportunities` Demo matched funding calls
+  - `/pricing` €299/month with Stripe placeholder button
+  - `/contact` Demo request form
+- Components: Navbar, Footer, Dropzone, ResultsCard, PricingTable, StripeCheckoutButton
+- State: Zustand demo store (files, compliance, deadlines, opportunities)
+- Error handling and lightweight logging
+
+## Getting Started
+
+- Node.js 18+ recommended
+
+```bash
+# from repo root
+cd consultant-portal
+npm install
+npm run dev
+```
+
+Build and preview:
+
+```bash
+npm run build
+npm run preview
+```
+
+## Environment Variables
+
+Copy `.env.example` to `.env` and set values:
+
+```bash
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+VITE_API_BASE_URL=https://api.example.com
+```
+
+Notes:
+- `VITE_` prefix is required for variables used in the browser.
+- The current Stripe checkout is a placeholder alert; wire it to your backend when ready.
+
+## Stripe Checkout (Placeholder)
+
+The `StripeCheckoutButton` component demonstrates where you would trigger checkout. In production:
+
+1) Create a Checkout Session on your backend with Stripe secret key.
+2) Return the session ID to the client.
+3) Use Stripe.js to redirect to Checkout.
+
+Until a backend exists, the button shows a placeholder alert and logs events.
+
+## Deploy
+
+### Vercel
+
+- Framework Preset: Vite
+- Build Command: `npm run build`
+- Output Directory: `dist`
+- Install Command: `npm install`
+- Environment Variables: add from `.env` as needed
+
+You can deploy with Vercel CLI:
+
+```bash
+vercel --cwd consultant-portal
+```
+
+Or via dashboard, setting the project root to `consultant-portal`.
+
+### Netlify
+
+- Build Command: `npm run build`
+- Publish Directory: `dist`
+- Base Directory: `consultant-portal`
+- Environment Variables: add from `.env`
+
+CLI deploy example:
+
+```bash
+cd consultant-portal
+netlify init   # select site
+netlify deploy --build --prod
+```
+
+## Project Structure
+
+```
+consultant-portal/
+├── index.html
+├── package.json
+├── postcss.config.js
+├── tailwind.config.ts
+├── tsconfig.json
+├── tsconfig.node.json
+├── vite.config.ts
+├── .env.example
+└── src/
+    ├── App.tsx
+    ├── index.css
+    ├── main.tsx
+    ├── lib/logger.ts
+    ├── store/useAppStore.ts
+    ├── components/
+    │   ├── Dropzone.tsx
+    │   ├── Footer.tsx
+    │   ├── Navbar.tsx
+    │   ├── PricingTable.tsx
+    │   └── StripeCheckoutButton.tsx
+    └── pages/
+        ├── Analysis.tsx
+        ├── Contact.tsx
+        ├── Home.tsx
+        ├── Opportunities.tsx
+        ├── Pricing.tsx
+        └── Upload.tsx
+```
+
+## Notes on Quality & Safety
+
+- TypeScript strict mode enabled; basic try/catch and logging provided
+- Tailwind content paths scoped to `index.html` and `src/**/*.{ts,tsx}`
+- No server code; all data shown is demo/local state
+- Keep files <500 lines and functions focused per EUFM guidelines
+
+## Next Steps
+
+- Connect to backend APIs for real analysis and opportunity data
+- Implement Stripe Checkout via server‑side session creation
+- Add authentication and protected routes if needed
+- Set up analytics and error monitoring
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.md b/consultant-portal/src/pages/Pricing.md
new file mode 100644
index 0000000000000000000000000000000000000000..ada5fffb8015d7359df32a905e93b8586a9e1b01
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.md
@@ -0,0 +1,2 @@
+Helper file for editors.
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});

[2025-09-08T17:26:33] tokens used: 2241
[2025-09-08T17:26:33] turn diff:
diff --git a/consultant-portal/.env.example b/consultant-portal/.env.example
new file mode 100644
index 0000000000000000000000000000000000000000..a80583a012441e7757a4f1dd9c335eeeab66ebf2
--- /dev/null
+++ b/consultant-portal/.env.example
@@ -0,0 +1,8 @@
+# Environment variables for Consultant Portal (Vite)
+
+# Public Stripe key for client-side initialization (placeholder)
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+
+# Optional: API base URL if connecting to backend services
+VITE_API_BASE_URL=https://api.example.com
+
diff --git a/consultant-portal/README.md b/consultant-portal/README.md
new file mode 100644
index 0000000000000000000000000000000000000000..1c1afd37391a8ab98ccf69db7f7a6e5d6292d6da
--- /dev/null
+++ b/consultant-portal/README.md
@@ -0,0 +1,140 @@
+# EUFM Consultant Portal (Vite + React + TypeScript)
+
+Deploy‑ready React web app for EUFM (European Union Funds Manager) — AI Agent Orchestration System. Includes routing, Tailwind CSS styling, Zustand state, drag‑and‑drop uploads, analysis and opportunities views, pricing with a placeholder Stripe checkout, and a contact form.
+
+## Features
+
+- React + TypeScript (Vite)
+- Tailwind CSS styling
+- React Router pages:
+  - `/` Home
+  - `/upload` Drag & drop upload
+  - `/analysis` Deadline/compliance results
+  - `/opportunities` Demo matched funding calls
+  - `/pricing` €299/month with Stripe placeholder button
+  - `/contact` Demo request form
+- Components: Navbar, Footer, Dropzone, ResultsCard, PricingTable, StripeCheckoutButton
+- State: Zustand demo store (files, compliance, deadlines, opportunities)
+- Error handling and lightweight logging
+
+## Getting Started
+
+- Node.js 18+ recommended
+
+```bash
+# from repo root
+cd consultant-portal
+npm install
+npm run dev
+```
+
+Build and preview:
+
+```bash
+npm run build
+npm run preview
+```
+
+## Environment Variables
+
+Copy `.env.example` to `.env` and set values:
+
+```bash
+VITE_STRIPE_PUBLIC_KEY=pk_test_XXXXXXXXXXXXXXXXXXXXXXXX
+VITE_API_BASE_URL=https://api.example.com
+```
+
+Notes:
+- `VITE_` prefix is required for variables used in the browser.
+- The current Stripe checkout is a placeholder alert; wire it to your backend when ready.
+
+## Stripe Checkout (Placeholder)
+
+The `StripeCheckoutButton` component demonstrates where you would trigger checkout. In production:
+
+1) Create a Checkout Session on your backend with Stripe secret key.
+2) Return the session ID to the client.
+3) Use Stripe.js to redirect to Checkout.
+
+Until a backend exists, the button shows a placeholder alert and logs events.
+
+## Deploy
+
+### Vercel
+
+- Framework Preset: Vite
+- Build Command: `npm run build`
+- Output Directory: `dist`
+- Install Command: `npm install`
+- Environment Variables: add from `.env` as needed
+
+You can deploy with Vercel CLI:
+
+```bash
+vercel --cwd consultant-portal
+```
+
+Or via dashboard, setting the project root to `consultant-portal`.
+
+### Netlify
+
+- Build Command: `npm run build`
+- Publish Directory: `dist`
+- Base Directory: `consultant-portal`
+- Environment Variables: add from `.env`
+
+CLI deploy example:
+
+```bash
+cd consultant-portal
+netlify init   # select site
+netlify deploy --build --prod
+```
+
+## Project Structure
+
+```
+consultant-portal/
+├── index.html
+├── package.json
+├── postcss.config.js
+├── tailwind.config.ts
+├── tsconfig.json
+├── tsconfig.node.json
+├── vite.config.ts
+├── .env.example
+└── src/
+    ├── App.tsx
+    ├── index.css
+    ├── main.tsx
+    ├── lib/logger.ts
+    ├── store/useAppStore.ts
+    ├── components/
+    │   ├── Dropzone.tsx
+    │   ├── Footer.tsx
+    │   ├── Navbar.tsx
+    │   ├── PricingTable.tsx
+    │   └── StripeCheckoutButton.tsx
+    └── pages/
+        ├── Analysis.tsx
+        ├── Contact.tsx
+        ├── Home.tsx
+        ├── Opportunities.tsx
+        ├── Pricing.tsx
+        └── Upload.tsx
+```
+
+## Notes on Quality & Safety
+
+- TypeScript strict mode enabled; basic try/catch and logging provided
+- Tailwind content paths scoped to `index.html` and `src/**/*.{ts,tsx}`
+- No server code; all data shown is demo/local state
+- Keep files <500 lines and functions focused per EUFM guidelines
+
+## Next Steps
+
+- Connect to backend APIs for real analysis and opportunity data
+- Implement Stripe Checkout via server‑side session creation
+- Add authentication and protected routes if needed
+- Set up analytics and error monitoring
+
diff --git a/consultant-portal/index.html b/consultant-portal/index.html
new file mode 100644
index 0000000000000000000000000000000000000000..44eca1c660ef2f8e3d49f6cdc2ebc7ca61408682
--- /dev/null
+++ b/consultant-portal/index.html
@@ -0,0 +1,14 @@
+<!doctype html>
+<html lang="en">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="description" content="EUFM Consultant Portal - AI-powered EU funding consultancy" />
+    <title>EUFM Consultant Portal</title>
+  </head>
+  <body class="bg-gray-50 text-gray-900">
+    <div id="root"></div>
+    <script type="module" src="/src/main.tsx"></script>
+  </body>
+  </html>
+
diff --git a/consultant-portal/package.json b/consultant-portal/package.json
new file mode 100644
index 0000000000000000000000000000000000000000..0d881cbc6d27747f8701df5a5720c2389b41b5fb
--- /dev/null
+++ b/consultant-portal/package.json
@@ -0,0 +1,28 @@
+{
+  "name": "consultant-portal",
+  "version": "0.1.0",
+  "private": true,
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "tsc -b && vite build",
+    "preview": "vite preview"
+  },
+  "dependencies": {
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.1",
+    "zustand": "^4.5.2"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "vite-tsconfig-paths": "^4.3.2",
+    "@types/react": "^18.3.7",
+    "@types/react-dom": "^18.3.0",
+    "autoprefixer": "^10.4.20",
+    "postcss": "^8.4.47",
+    "tailwindcss": "^3.4.12",
+    "typescript": "^5.5.4",
+    "vite": "^5.4.2"
+  }
+}
diff --git a/consultant-portal/postcss.config.js b/consultant-portal/postcss.config.js
new file mode 100644
index 0000000000000000000000000000000000000000..1d926516e727cc4841846b3069d0ee76a2587449
--- /dev/null
+++ b/consultant-portal/postcss.config.js
@@ -0,0 +1,7 @@
+export default {
+  plugins: {
+    tailwindcss: {},
+    autoprefixer: {},
+  },
+};
+
diff --git a/consultant-portal/src/App.tsx b/consultant-portal/src/App.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..6b4251326e760583af68f3cfe0619195944abb58
--- /dev/null
+++ b/consultant-portal/src/App.tsx
@@ -0,0 +1,32 @@
+import { Routes, Route, Navigate } from 'react-router-dom';
+import Navbar from '@components/Navbar';
+import Footer from '@components/Footer';
+import Home from '@pages/Home';
+import Upload from '@pages/Upload';
+import Analysis from '@pages/Analysis';
+import Opportunities from '@pages/Opportunities';
+import Pricing from '@pages/Pricing';
+import Contact from '@pages/Contact';
+
+function App() {
+  return (
+    <div className="min-h-screen flex flex-col">
+      <Navbar />
+      <main className="flex-1">
+        <Routes>
+          <Route path="/" element={<Home />} />
+          <Route path="/upload" element={<Upload />} />
+          <Route path="/analysis" element={<Analysis />} />
+          <Route path="/opportunities" element={<Opportunities />} />
+          <Route path="/pricing" element={<Pricing />} />
+          <Route path="/contact" element={<Contact />} />
+          <Route path="*" element={<Navigate to="/" replace />} />
+        </Routes>
+      </main>
+      <Footer />
+    </div>
+  );
+}
+
+export default App;
+
diff --git a/consultant-portal/src/components/Dropzone.tsx b/consultant-portal/src/components/Dropzone.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..af86f9b835538f1e985795fdf230152c70eb2f7b
--- /dev/null
+++ b/consultant-portal/src/components/Dropzone.tsx
@@ -0,0 +1,71 @@
+import { useCallback, useState } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+type Props = {
+  onFilesAccepted?: (files: File[]) => void;
+};
+
+function Dropzone({ onFilesAccepted }: Props) {
+  const setFiles = useAppStore((s) => s.setFiles);
+  const [isDragging, setDragging] = useState(false);
+  const [error, setError] = useState<string | null>(null);
+
+  const handleFiles = useCallback(
+    (fileList: FileList | null) => {
+      setError(null);
+      if (!fileList || fileList.length === 0) return;
+      const files = Array.from(fileList);
+      const uploaded = files.map((f) => ({ name: f.name, size: f.size, type: f.type }));
+      setFiles(uploaded);
+      onFilesAccepted?.(files);
+    },
+    [onFilesAccepted, setFiles]
+  );
+
+  return (
+    <div>
+      <div
+        className={`border-2 border-dashed rounded-lg p-8 text-center transition-colors ${
+          isDragging ? 'border-eufm-primary bg-sky-50' : 'border-gray-300 bg-white'
+        }`}
+        onDragOver={(e) => {
+          e.preventDefault();
+          setDragging(true);
+        }}
+        onDragLeave={() => setDragging(false)}
+        onDrop={(e) => {
+          e.preventDefault();
+          setDragging(false);
+          try {
+            handleFiles(e.dataTransfer.files);
+          } catch (err) {
+            setError('Failed to process dropped files.');
+          }
+        }}
+      >
+        <p className="mb-3 text-gray-700">Drag & drop documents here</p>
+        <p className="text-xs text-gray-500 mb-4">PDF, DOCX, or TXT. Max 10MB each.</p>
+        <label className="inline-block">
+          <span className="px-4 py-2 bg-eufm-primary text-white rounded cursor-pointer hover:bg-sky-600">Browse files</span>
+          <input
+            type="file"
+            className="hidden"
+            multiple
+            onChange={(e) => {
+              try {
+                handleFiles(e.target.files);
+                e.currentTarget.value = '';
+              } catch (err) {
+                setError('Failed to process selected files.');
+              }
+            }}
+          />
+        </label>
+      </div>
+      {error && <p className="text-red-600 text-sm mt-2">{error}</p>}
+    </div>
+  );
+}
+
+export default Dropzone;
+
diff --git a/consultant-portal/src/components/Footer.tsx b/consultant-portal/src/components/Footer.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..701b3f27dd062cef4564e59804bca8fd14b584f1
--- /dev/null
+++ b/consultant-portal/src/components/Footer.tsx
@@ -0,0 +1,13 @@
+function Footer() {
+  return (
+    <footer className="bg-white border-t border-gray-200 mt-8">
+      <div className="container-max py-6 text-sm text-gray-600 flex flex-col md:flex-row items-center justify-between gap-3">
+        <p>© {new Date().getFullYear()} EUFM — European Union Funds Manager</p>
+        <p className="text-gray-500">AI Agent Orchestration System</p>
+      </div>
+    </footer>
+  );
+}
+
+export default Footer;
+
diff --git a/consultant-portal/src/components/Navbar.tsx b/consultant-portal/src/components/Navbar.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..3498e2f4af0b0ba37299fd625673d816285b3cab
--- /dev/null
+++ b/consultant-portal/src/components/Navbar.tsx
@@ -0,0 +1,38 @@
+import { Link, NavLink } from 'react-router-dom';
+
+const navItems = [
+  { to: '/', label: 'Home' },
+  { to: '/upload', label: 'Upload' },
+  { to: '/analysis', label: 'Analysis' },
+  { to: '/opportunities', label: 'Opportunities' },
+  { to: '/pricing', label: 'Pricing' },
+  { to: '/contact', label: 'Contact' },
+];
+
+function Navbar() {
+  return (
+    <header className="bg-white border-b border-gray-200">
+      <div className="container-max h-16 flex items-center justify-between">
+        <Link to="/" className="font-semibold text-eufm-dark">
+          EUFM Consultant Portal
+        </Link>
+        <nav className="flex gap-4 text-sm">
+          {navItems.map((item) => (
+            <NavLink
+              key={item.to}
+              to={item.to}
+              className={({ isActive }) =>
+                `px-2 py-1 rounded hover:text-eufm-primary ${isActive ? 'text-eufm-primary font-medium' : 'text-gray-700'}`
+              }
+            >
+              {item.label}
+            </NavLink>
+          ))}
+        </nav>
+      </div>
+    </header>
+  );
+}
+
+export default Navbar;
+
diff --git a/consultant-portal/src/components/PricingTable.tsx b/consultant-portal/src/components/PricingTable.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..67c23bedbf6e6fccc64cc26ee8ca0d5d580be38e
--- /dev/null
+++ b/consultant-portal/src/components/PricingTable.tsx
@@ -0,0 +1,47 @@
+import StripeCheckoutButton from './StripeCheckoutButton';
+
+function PricingTable() {
+  return (
+    <div className="grid md:grid-cols-3 gap-6">
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Starter</h3>
+        <p className="text-3xl font-bold mt-2">€0<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Upload up to 3 documents</li>
+          <li>Basic compliance checks</li>
+          <li>Email support</li>
+        </ul>
+      </div>
+
+      <div className="bg-white border-2 border-eufm-primary rounded-lg p-6 shadow-sm">
+        <h3 className="text-lg font-semibold">Professional</h3>
+        <p className="text-3xl font-bold mt-2">€299<span className="text-base font-medium">/month</span></p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Unlimited uploads</li>
+          <li>Advanced deadline tracking</li>
+          <li>AI-generated opportunity matching</li>
+          <li>Priority support</li>
+        </ul>
+        <div className="mt-6">
+          <StripeCheckoutButton planId="pro-monthly" label="Start Professional" />
+        </div>
+      </div>
+
+      <div className="bg-white border border-gray-200 rounded-lg p-6">
+        <h3 className="text-lg font-semibold">Enterprise</h3>
+        <p className="text-3xl font-bold mt-2">Custom</p>
+        <ul className="mt-4 space-y-2 text-sm text-gray-600">
+          <li>Dedicated onboarding</li>
+          <li>Enterprise SLA</li>
+          <li>Custom integrations</li>
+        </ul>
+        <div className="mt-6">
+          <a href="/contact" className="px-4 py-2 rounded bg-gray-900 text-white hover:bg-black">Contact Sales</a>
+        </div>
+      </div>
+    </div>
+  );
+}
+
+export default PricingTable;
+
diff --git a/consultant-portal/src/components/ResultsCard.tsx b/consultant-portal/src/components/ResultsCard.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..4404b43944e7b166cbc0b84fdb0760fc31b76099
--- /dev/null
+++ b/consultant-portal/src/components/ResultsCard.tsx
@@ -0,0 +1,36 @@
+type Props = {
+  title: string;
+  items: { label: string; value: string; status?: 'pass' | 'warn' | 'fail' }[];
+};
+
+function statusColor(status?: 'pass' | 'warn' | 'fail') {
+  switch (status) {
+    case 'pass':
+      return 'text-green-600';
+    case 'warn':
+      return 'text-yellow-600';
+    case 'fail':
+      return 'text-red-600';
+    default:
+      return 'text-gray-700';
+  }
+}
+
+function ResultsCard({ title, items }: Props) {
+  return (
+    <div className="bg-white border border-gray-200 rounded-lg p-4">
+      <h3 className="font-medium text-gray-900 mb-3">{title}</h3>
+      <ul className="space-y-2">
+        {items.map((item) => (
+          <li key={item.label} className="flex items-center justify-between text-sm">
+            <span className="text-gray-600">{item.label}</span>
+            <span className={`font-medium ${statusColor(item.status)}`}>{item.value}</span>
+          </li>
+        ))}
+      </ul>
+    </div>
+  );
+}
+
+export default ResultsCard;
+
diff --git a/consultant-portal/src/components/StripeCheckoutButton.tsx b/consultant-portal/src/components/StripeCheckoutButton.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..9c9f71ffd4a9815988773f9cba4d1554ba592988
--- /dev/null
+++ b/consultant-portal/src/components/StripeCheckoutButton.tsx
@@ -0,0 +1,40 @@
+import { log } from '@lib/logger';
+
+type Props = {
+  planId: string;
+  label?: string;
+};
+
+// Placeholder Stripe checkout button. Wire up to your backend to create a Checkout Session.
+function StripeCheckoutButton({ planId, label = 'Subscribe' }: Props) {
+  const publicKey = import.meta.env.VITE_STRIPE_PUBLIC_KEY as string | undefined;
+
+  const handleClick = async () => {
+    try {
+      if (!publicKey) {
+        alert('Stripe key not configured. See README to set VITE_STRIPE_PUBLIC_KEY.');
+        return;
+      }
+      log('info', 'Stripe checkout clicked', { planId });
+      // In a real integration, call your backend to create a Checkout Session, then redirect.
+      // This is a placeholder action.
+      alert(`Pretending to start Stripe Checkout for plan: ${planId}`);
+    } catch (err) {
+      log('error', 'Stripe checkout failed', err);
+      alert('Something went wrong starting checkout.');
+    }
+  };
+
+  return (
+    <button
+      onClick={handleClick}
+      className="w-full px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600"
+      aria-label="Start Stripe checkout"
+    >
+      {label}
+    </button>
+  );
+}
+
+export default StripeCheckoutButton;
+
diff --git a/consultant-portal/src/index.css b/consultant-portal/src/index.css
new file mode 100644
index 0000000000000000000000000000000000000000..ce075760f4fb6cf62b502c04a048da8aba93d63e
--- /dev/null
+++ b/consultant-portal/src/index.css
@@ -0,0 +1,9 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+/* App-level utility classes */
+.container-max {
+  @apply max-w-6xl mx-auto px-4;
+}
+
diff --git a/consultant-portal/src/lib/logger.ts b/consultant-portal/src/lib/logger.ts
new file mode 100644
index 0000000000000000000000000000000000000000..f86155f2ace2f51fcac0cc16916e4976f4b7eb90
--- /dev/null
+++ b/consultant-portal/src/lib/logger.ts
@@ -0,0 +1,18 @@
+export type LogLevel = 'debug' | 'info' | 'warn' | 'error';
+
+const LOG_LEVELS: Record<LogLevel, number> = {
+  debug: 10,
+  info: 20,
+  warn: 30,
+  error: 40,
+};
+
+const currentLevel: LogLevel = (import.meta.env.MODE === 'development' ? 'debug' : 'info');
+
+export function log(level: LogLevel, message: string, meta?: unknown) {
+  if (LOG_LEVELS[level] < LOG_LEVELS[currentLevel]) return;
+  const payload = meta !== undefined ? { message, meta } : { message };
+  // eslint-disable-next-line no-console
+  console[level](`[${level.toUpperCase()}]`, payload);
+}
+
diff --git a/consultant-portal/src/main.tsx b/consultant-portal/src/main.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..57887184996473cadfe4eb73f053a7f42eeb228f
--- /dev/null
+++ b/consultant-portal/src/main.tsx
@@ -0,0 +1,20 @@
+import React from 'react';
+import { createRoot } from 'react-dom/client';
+import { BrowserRouter } from 'react-router-dom';
+import App from './App';
+import './index.css';
+
+const container = document.getElementById('root');
+if (!container) {
+  // Fail fast if root is missing
+  throw new Error('Root container not found');
+}
+
+createRoot(container).render(
+  <React.StrictMode>
+    <BrowserRouter>
+      <App />
+    </BrowserRouter>
+  </React.StrictMode>
+);
+
diff --git a/consultant-portal/src/pages/Analysis.md b/consultant-portal/src/pages/Analysis.md
new file mode 100644
index 0000000000000000000000000000000000000000..a6d1f8bff7a1f626cc7ea029d09a05d3c7dae0d6
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.md
@@ -0,0 +1,2 @@
+This file intentionally left minimal to keep directory handy for editors.
+
diff --git a/consultant-portal/src/pages/Analysis.tsx b/consultant-portal/src/pages/Analysis.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..76a21bd4925f1c0c07829a88827dd823d699a948
--- /dev/null
+++ b/consultant-portal/src/pages/Analysis.tsx
@@ -0,0 +1,44 @@
+import ResultsCard from '@components/ResultsCard';
+import { useAppStore } from '@store/useAppStore';
+
+function Analysis() {
+  const { compliance, deadlines, files } = useAppStore((s) => ({
+    compliance: s.compliance,
+    deadlines: s.deadlines,
+    files: s.files,
+  }));
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Analysis Results</h2>
+      <p className="text-gray-600 mt-2">Summary of eligibility and upcoming deadlines.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        <ResultsCard
+          title="Compliance"
+          items={compliance.map((c) => ({ label: c.check, value: c.detail ?? c.status.toUpperCase(), status: c.status }))}
+        />
+        <ResultsCard
+          title="Deadlines"
+          items={deadlines.map((d) => ({ label: d.program, value: new Date(d.deadline).toLocaleDateString() }))}
+        />
+      </div>
+
+      <div className="mt-8">
+        <h3 className="font-medium">Uploaded Files</h3>
+        {files.length === 0 ? (
+          <p className="text-sm text-gray-600 mt-2">No files uploaded yet.</p>
+        ) : (
+          <ul className="mt-2 text-sm text-gray-700 list-disc list-inside">
+            {files.map((f) => (
+              <li key={f.name}>{f.name} — {(f.size / 1024).toFixed(1)} KB</li>
+            ))}
+          </ul>
+        )}
+      </div>
+    </section>
+  );
+}
+
+export default Analysis;
+
diff --git a/consultant-portal/src/pages/Contact.tsx b/consultant-portal/src/pages/Contact.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..7a6cb01e6382640ca8f98a52793afd14cd71f210
--- /dev/null
+++ b/consultant-portal/src/pages/Contact.tsx
@@ -0,0 +1,57 @@
+import { FormEvent, useState } from 'react';
+import { log } from '@lib/logger';
+
+function Contact() {
+  const [status, setStatus] = useState<'idle' | 'submitting' | 'submitted' | 'error'>('idle');
+
+  const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
+    e.preventDefault();
+    setStatus('submitting');
+    try {
+      const form = new FormData(e.currentTarget);
+      const payload = Object.fromEntries(form.entries());
+      log('info', 'Demo request submitted', payload);
+      await new Promise((r) => setTimeout(r, 500));
+      setStatus('submitted');
+    } catch (err) {
+      setStatus('error');
+    }
+  };
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Request a Demo</h2>
+      <p className="text-gray-600 mt-2">Tell us about your use case. We’ll get in touch.</p>
+
+      <form onSubmit={onSubmit} className="mt-6 grid gap-4 max-w-xl">
+        <div>
+          <label className="block text-sm text-gray-700">Name</label>
+          <input name="name" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Email</label>
+          <input type="email" name="email" required className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Company</label>
+          <input name="company" className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <div>
+          <label className="block text-sm text-gray-700">Message</label>
+          <textarea name="message" rows={4} className="mt-1 w-full border border-gray-300 rounded px-3 py-2" />
+        </div>
+        <button
+          disabled={status === 'submitting'}
+          className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600 disabled:opacity-60"
+        >
+          {status === 'submitting' ? 'Submitting…' : 'Request Demo'}
+        </button>
+        {status === 'submitted' && <p className="text-green-600 text-sm">Thanks! We’ll reach out soon.</p>}
+        {status === 'error' && <p className="text-red-600 text-sm">Something went wrong. Please try again.</p>}
+      </form>
+    </section>
+  );
+}
+
+export default Contact;
+
diff --git a/consultant-portal/src/pages/Home.tsx b/consultant-portal/src/pages/Home.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..029cf8a04f3f2105e45a4e1fb5c3e9350b69d159
--- /dev/null
+++ b/consultant-portal/src/pages/Home.tsx
@@ -0,0 +1,33 @@
+import { Link } from 'react-router-dom';
+
+function Home() {
+  return (
+    <section className="container-max py-10">
+      <div className="text-center">
+        <h1 className="text-3xl md:text-4xl font-bold text-gray-900">EUFM Consultant Portal</h1>
+        <p className="mt-3 text-gray-600">AI-powered EU funding consultancy. Upload documents, analyze compliance, and discover opportunities.</p>
+        <div className="mt-6 flex justify-center gap-3">
+          <Link to="/upload" className="px-4 py-2 rounded bg-eufm-primary text-white hover:bg-sky-600">Get Started</Link>
+          <Link to="/opportunities" className="px-4 py-2 rounded border border-gray-300 hover:bg-gray-50">View Opportunities</Link>
+        </div>
+      </div>
+      <div className="mt-10 grid md:grid-cols-3 gap-6">
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Smart Uploads</h3>
+          <p className="text-sm text-gray-600 mt-2">Drag-and-drop project docs to start automated analysis.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Compliance Insights</h3>
+          <p className="text-sm text-gray-600 mt-2">Instant feedback on eligibility, SME status, and fit.</p>
+        </div>
+        <div className="bg-white border border-gray-200 rounded-lg p-4">
+          <h3 className="font-medium">Matched Opportunities</h3>
+          <p className="text-sm text-gray-600 mt-2">Receive curated EU funding calls with match scores.</p>
+        </div>
+      </div>
+    </section>
+  );
+}
+
+export default Home;
+
diff --git a/consultant-portal/src/pages/Opportunities.tsx b/consultant-portal/src/pages/Opportunities.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..dd51c129812d92124a56bec1d06974bff8f52c96
--- /dev/null
+++ b/consultant-portal/src/pages/Opportunities.tsx
@@ -0,0 +1,43 @@
+import { useEffect } from 'react';
+import { useAppStore } from '@store/useAppStore';
+
+function Opportunities() {
+  const { opportunities, generateDemoOpportunities } = useAppStore((s) => ({
+    opportunities: s.opportunities,
+    generateDemoOpportunities: s.generateDemoOpportunities,
+  }));
+
+  useEffect(() => {
+    if (opportunities.length === 0) generateDemoOpportunities();
+  }, [opportunities.length, generateDemoOpportunities]);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Matched Opportunities</h2>
+      <p className="text-gray-600 mt-2">Demo results based on your uploaded documents.</p>
+
+      <div className="mt-6 grid md:grid-cols-2 gap-6">
+        {opportunities.map((o) => (
+          <div key={o.id} className="bg-white border border-gray-200 rounded-lg p-4">
+            <div className="flex items-start justify-between">
+              <div>
+                <h3 className="font-medium text-gray-900">{o.title}</h3>
+                <p className="text-sm text-gray-600">{o.program}</p>
+              </div>
+              <span className="text-sm font-medium text-eufm-dark">{o.amount}</span>
+            </div>
+            <div className="mt-4">
+              <div className="h-2 bg-gray-200 rounded">
+                <div className="h-2 bg-eufm-primary rounded" style={{ width: `${o.matchScore}%` }} />
+              </div>
+              <p className="text-xs text-gray-600 mt-2">Match score: {o.matchScore}%</p>
+            </div>
+          </div>
+        ))}
+      </div>
+    </section>
+  );
+}
+
+export default Opportunities;
+
diff --git a/consultant-portal/src/pages/Pricing.md b/consultant-portal/src/pages/Pricing.md
new file mode 100644
index 0000000000000000000000000000000000000000..ada5fffb8015d7359df32a905e93b8586a9e1b01
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.md
@@ -0,0 +1,2 @@
+Helper file for editors.
+
diff --git a/consultant-portal/src/pages/Pricing.tsx b/consultant-portal/src/pages/Pricing.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..1747fd1f0f38ba9afed4fa06ac3af4980719f162
--- /dev/null
+++ b/consultant-portal/src/pages/Pricing.tsx
@@ -0,0 +1,16 @@
+import PricingTable from '@components/PricingTable';
+
+function Pricing() {
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Pricing</h2>
+      <p className="text-gray-600 mt-2">Choose the plan that fits — Professional at €299/month.</p>
+      <div className="mt-6">
+        <PricingTable />
+      </div>
+    </section>
+  );
+}
+
+export default Pricing;
+
diff --git a/consultant-portal/src/pages/Upload.tsx b/consultant-portal/src/pages/Upload.tsx
new file mode 100644
index 0000000000000000000000000000000000000000..0753b20918dcd9e6a104ace63aa42b06d37eb58f
--- /dev/null
+++ b/consultant-portal/src/pages/Upload.tsx
@@ -0,0 +1,26 @@
+import Dropzone from '@components/Dropzone';
+import { useNavigate } from 'react-router-dom';
+import { useAppStore } from '@store/useAppStore';
+
+function Upload() {
+  const navigate = useNavigate();
+  const analyze = useAppStore((s) => s.analyze);
+
+  return (
+    <section className="container-max py-10">
+      <h2 className="text-2xl font-semibold">Upload Documents</h2>
+      <p className="text-gray-600 mt-2">Add your project documents to run compliance analysis.</p>
+      <div className="mt-6">
+        <Dropzone
+          onFilesAccepted={() => {
+            analyze();
+            navigate('/analysis');
+          }}
+        />
+      </div>
+    </section>
+  );
+}
+
+export default Upload;
+
diff --git a/consultant-portal/src/pages/_.md b/consultant-portal/src/pages/_.md
new file mode 100644
index 0000000000000000000000000000000000000000..3074bd29cfdd7899731dda8d4737e599f05ab223
--- /dev/null
+++ b/consultant-portal/src/pages/_.md
@@ -0,0 +1,2 @@
+// Placeholder file to ensure directory creation in some tooling
+
diff --git a/consultant-portal/src/store/useAppStore.ts b/consultant-portal/src/store/useAppStore.ts
new file mode 100644
index 0000000000000000000000000000000000000000..fc69ca00eb4a1ac8245dde5d4b27a3ee8fbb8417
--- /dev/null
+++ b/consultant-portal/src/store/useAppStore.ts
@@ -0,0 +1,84 @@
+import { create } from 'zustand';
+import { log } from '@lib/logger';
+
+export type UploadedFile = {
+  name: string;
+  size: number;
+  type: string;
+};
+
+export type ComplianceResult = {
+  check: string;
+  status: 'pass' | 'warn' | 'fail';
+  detail?: string;
+};
+
+export type DeadlineInfo = {
+  program: string;
+  deadline: string; // ISO date string or friendly
+};
+
+export type Opportunity = {
+  id: string;
+  title: string;
+  program: string;
+  amount: string;
+  matchScore: number; // 0-100
+};
+
+type AppState = {
+  files: UploadedFile[];
+  compliance: ComplianceResult[];
+  deadlines: DeadlineInfo[];
+  opportunities: Opportunity[];
+  setFiles: (files: UploadedFile[]) => void;
+  analyze: () => void;
+  generateDemoOpportunities: () => void;
+  clear: () => void;
+};
+
+export const useAppStore = create<AppState>((set, get) => ({
+  files: [],
+  compliance: [],
+  deadlines: [],
+  opportunities: [],
+
+  setFiles: (files) => {
+    log('info', 'Setting uploaded files', { count: files.length });
+    set({ files });
+  },
+
+  analyze: () => {
+    try {
+      const { files } = get();
+      // Demo analysis: fabricate results based on file presence
+      const hasFiles = files.length > 0;
+      const compliance: ComplianceResult[] = [
+        { check: 'Eligibility criteria matched', status: hasFiles ? 'pass' : 'warn', detail: hasFiles ? 'Docs parsed' : 'Upload docs to verify' },
+        { check: 'SME status confirmed', status: 'pass' },
+        { check: 'Regional fit', status: 'warn', detail: 'Pending location details' },
+      ];
+      const deadlines: DeadlineInfo[] = [
+        { program: 'Horizon Europe', deadline: '2025-02-15' },
+        { program: 'Digital Europe', deadline: '2025-03-01' },
+      ];
+      set({ compliance, deadlines });
+      log('info', 'Analysis completed', { complianceCount: compliance.length, deadlines: deadlines.length });
+    } catch (err) {
+      log('error', 'Analysis failed', err);
+    }
+  },
+
+  generateDemoOpportunities: () => {
+    const opportunities: Opportunity[] = [
+      { id: 'opp-1', title: 'AI for SMEs', program: 'Digital Europe', amount: '€200,000', matchScore: 86 },
+      { id: 'opp-2', title: 'Green Transition', program: 'Horizon Europe', amount: '€500,000', matchScore: 74 },
+      { id: 'opp-3', title: 'Regional Innovation', program: 'ERDF', amount: '€120,000', matchScore: 65 },
+    ];
+    set({ opportunities });
+    log('info', 'Demo opportunities generated', { count: opportunities.length });
+  },
+
+  clear: () => set({ files: [], compliance: [], deadlines: [], opportunities: [] }),
+}));
+
diff --git a/consultant-portal/tailwind.config.ts b/consultant-portal/tailwind.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..0b75efebaae59b214d4a728199695f088e8499b2
--- /dev/null
+++ b/consultant-portal/tailwind.config.ts
@@ -0,0 +1,21 @@
+import type { Config } from 'tailwindcss';
+
+export default {
+  content: [
+    './index.html',
+    './src/**/*.{ts,tsx}',
+  ],
+  theme: {
+    extend: {
+      colors: {
+        eufm: {
+          primary: '#0ea5e9',
+          dark: '#0b5c7a',
+          accent: '#22c55e',
+        },
+      },
+    },
+  },
+  plugins: [],
+} satisfies Config;
+
diff --git a/consultant-portal/tsconfig.json b/consultant-portal/tsconfig.json
new file mode 100644
index 0000000000000000000000000000000000000000..e19f3e583c04e26d433cd0323272b5faf4c06881
--- /dev/null
+++ b/consultant-portal/tsconfig.json
@@ -0,0 +1,16 @@
+{
+  "extends": "./tsconfig.node.json",
+  "compilerOptions": {
+    "jsx": "react-jsx",
+    "baseUrl": ".",
+    "paths": {
+      "@components/*": ["src/components/*"],
+      "@pages/*": ["src/pages/*"],
+      "@store/*": ["src/store/*"],
+      "@lib/*": ["src/lib/*"]
+    }
+  },
+  "include": ["src"],
+  "exclude": ["dist", "node_modules"]
+}
+
diff --git a/consultant-portal/tsconfig.node.json b/consultant-portal/tsconfig.node.json
new file mode 100644
index 0000000000000000000000000000000000000000..e9045b4e8dc4348f89d8609e2c455dbb517b8cff
--- /dev/null
+++ b/consultant-portal/tsconfig.node.json
@@ -0,0 +1,18 @@
+{
+  "compilerOptions": {
+    "target": "ES2020",
+    "useDefineForClassFields": true,
+    "lib": ["ES2020", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "skipLibCheck": true,
+    "moduleResolution": "Bundler",
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "noEmit": true,
+    "esModuleInterop": true,
+    "forceConsistentCasingInFileNames": true,
+    "strict": true
+  },
+  "include": ["vite.config.ts"]
+}
+
diff --git a/consultant-portal/vite.config.ts b/consultant-portal/vite.config.ts
new file mode 100644
index 0000000000000000000000000000000000000000..91893b32d5807a07574ef7d1a5f1084070b4e9b5
--- /dev/null
+++ b/consultant-portal/vite.config.ts
@@ -0,0 +1,14 @@
+import { defineConfig } from 'vite';
+import react from '@vitejs/plugin-react';
+import tsconfigPaths from 'vite-tsconfig-paths';
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react(), tsconfigPaths()],
+  server: {
+    port: 5173
+  },
+  preview: {
+    port: 4173
+  }
+});


[2025-09-08T17:26:38] thinking

**Validating build process**

I noticed that some extra markdown placeholder files were created — not needed, but harmless. The user didn't request them, and they add a bit of clutter. No lint step is required, so that's alright. To validate, I need to run a TypeScript build, but since node modules weren't installed, it will fail unless I run npm install first. Although it might take some time, I think it’s necessary. I’ll proceed to run npm install in the consultant-portal and then npm run build to validate.
[2025-09-08T17:26:40] codex

I install dependencies for consultant’ll-portal/, then run a TypeScript build to validate the setup.
[2025-09-08T17:26:41] exec bash -lc 'cd consultant-portal && npm install' in /Users/panda/Desktop/EUFM

ERROR: Codex task timed out after 600000ms

Process exited with code: 0
